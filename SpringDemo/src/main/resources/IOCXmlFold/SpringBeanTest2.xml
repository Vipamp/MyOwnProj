<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="car" class="com.heqingsong.Spring.IOC.Bean.Car">
        <property name="brand" value="BMW"/>
        <property name="maxSpeed" value="100"/>
        <property name="addr" value="ShangHai"/>
        <property name="price" value="100"/>
    </bean>

    <!--
        autowire 标签自动装配，意思是，如果在IOC容器中，能拿到对应的唯一的bean可以和该对象的属性匹配，就会自动装配到该对象中，
        byName：按照bean的名称，也就是bean标签的id，如果该id的名称和待装配对象的属性一致，并且写了 set/get 方法，会自动装配
        byType：按照bean的类型，和待装配的对象的属性类型匹配，如果有多个同类型的bean满足匹配条件
     -->
    <bean id="people" class="com.heqingsong.Spring.IOC.Bean.People" autowire="byName"/>

    <bean id="people2" class="com.heqingsong.Spring.IOC.Bean.People" p:age="35" p:name="people2"/>

    <!--
        bean对象的继承，使用 parent 标签，即继承了父标签的属性，也可以重写父标签的属性
        父类标签，可以是正常的 bean，也可以是抽象 bean，在标签里面增加 abstract 属性
        抽象bean可以不写class属性
        通常 bean，如果不加上 abstract，是可以被实例化存放在IOC容器里面，
        如果加上 abstract，不会被实例化存放在 IOC 容器中
     -->
    <bean id="people3" class="com.heqingsong.Spring.IOC.Bean.People" parent="people2" p:name="people3"/>

    <!--
        scope 设置bean的作用域:
        singleton(默认)：每次从IOC容器中获取的bean，都是一样的，是单例bean，是在初始化IOC容器时，就会去创建单例对象，即该bean
        prototype：每次从IOC容器中获取的bean，都不一样，都IOC都会自动创建一个新的对象，不是在初始化IOC容器时创建，而是在每一次获取bean时，才会去创建
    -->
    <bean id="people4" class="com.heqingsong.Spring.IOC.Bean.People" parent="people2" p:name="people4" scope="prototype"/>
</beans>
